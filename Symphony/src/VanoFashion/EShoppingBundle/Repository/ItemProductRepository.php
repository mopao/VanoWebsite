<?php

namespace VanoFashion\EShoppingBundle\Repository;

use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ItemProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemProductRepository extends \Doctrine\ORM\EntityRepository
{


	/**
	 *get products in database and paginate
	 */

	public function getProducts($page, $nbPerPage , array $filter=null){

		$qb=$this->createQueryBuilder('p')
		         ->leftJoin('p.gender', 'g')
                 ->addSelect('g')
                 ->leftJoin('p.category', 'c')
                 ->addSelect('c');


        if($filter!==null and count($filter)>0){
		      foreach ($filter as $key => $value) {
		        if ($key==="gender") {
		           # code...
		          $qb->andWhere($qb->expr()->in('g.'.$key, $value));
		         }
		         elseif ($key==="category") {
		         	# code...
		         	$qb->andWhere($qb->expr()->in('c.name', $value));
		         }
		         else{
		          $qb->andWhere($qb->expr()->in('p.'.$key, $value));
		         }
		      }
        }               
                 
        $qb->orderBy('p.name', 'ASC')
           ->getQuery();         

         $qb->setFirstResult(($page-1) * $nbPerPage);      

         $qb->setMaxResults($nbPerPage);       

        return new Paginator($qb, true);

        

	}



/**
 *get products in database 
 */

	public function getAllProducts(array $filter=null){

		$qb=$this->createQueryBuilder('p')
		         ->leftJoin('p.gender', 'g')
                 ->addSelect('g')
                 ->leftJoin('p.category', 'c')
                 ->addSelect('c');


        if($filter!==null and count($filter)>0){
		      foreach ($filter as $key => $value) {
		        if ($key==="gender") {
		           # code...
		          $qb->andWhere($qb->expr()->in('g.'.$key, $value));
		         }
		         elseif ($key==="category") {
		         	# code...
		         	$qb->andWhere($qb->expr()->in('c.name', $value));
		         }
		         else{
		          $qb->andWhere($qb->expr()->in('i.'.$key, $value));
		         }
		      }
        }               
                 
        $qb->orderBy('p.name', 'ASC');                  

        
        return $qb->getQuery()->getResult();

        

	}


	

	


}
